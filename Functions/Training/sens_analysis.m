% Results we are interested in studying
fields = {...
    'Sfull',...
    'decayLen',...
    'meanLen',...
    'fibLengthDensity'};

% Results from last iteration of optimization
res_end = sens_res(:,end);

for i = 1:length(res_end);
    res_end(i).Sfull =...
        res_end(i).results.op2d.Sfull;
    res_end(i).decayLen =...
        res_end(i).results.op2d.decayLen;
    res_end(i).meanLen =...
        mean(res_end(i).results.FLD);
    res_end(i).medLen =...
        median(res_end(i).results.FLD);
    res_end(i).fibLengthDensity =...
        res_end(i).results.fibLengthDensity;
end

% Structure that will contain the partial derivative
% of result j w.r.t. parameter i
sens=struct();
np = size(param_mat,1);   % Number of parameters

for i = 1:np
    for j = 1:length(fields)
        % difference between results normalized by value of result at
        % center divided by difference in parameter normalized by its
        % own value
        
        sens(i).(fields{j}) = ...
            ( ...
            ( res_end(i+np).(fields{j}) ...
            - res_end(i).(fields{j}) ) ...
            / res_end(end).(fields{j}) ...
            ) ...
            / ...
            ( ...
            ( res_end(i+np).results.Params(i) ...
            - res_end(i).results.Params(i) ) ...
            / res_end(end).results.Params(i) ...
            );
    end
end

